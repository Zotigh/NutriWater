@page "/editcalculationspage"

@inject Calculations CalculatedService
@inject NavigationManager NavigationManager

<h1>Edit Your Calculations On This Page By Selecting The Calculation You Want To Edit</h1>
<!--Main Part of page-->
<div style="background-color:darkslateblue">
    <div style="padding:1vw;">
        <form action="~/index.html" method="get" style="color:white">
            <EditForm Model="@SingCalc" OnValidSubmit="@SubmitButtonPressed">
                <DataAnnotationsValidator />
                
                Title:
                <InputText id="SingleCalculation." @bind-Value="@SingCalc.Title"
                           type="text" style="width:100%;" />
                <ValidationMessage For="@(() => SingCalc.Title)" />

                FloraGro (In ml):
                <InputNumber id="SingleCalculation." @bind-Value="SingCalc.FloraGro"
                             name="principle" type="text" style="width:100%;" />
                <ValidationMessage For="@(() => SingCalc.FloraGro)" />
                <br /><br />

                FloraBloom (In ml):
                <InputNumber id="SingleCalculation." @bind-Value="@SingCalc.FloraBloom"
                             type="text" style="width:100%;" />
                <ValidationMessage For="@(() => SingCalc.FloraBloom)" />
                <br /><br />

                FloraMicro (In ml):
                <InputNumber id="SingleCalculation." @bind-Value="@SingCalc.FloraMicro"
                             type="text" style="width:100%;" />
                <ValidationMessage For="@(() => SingCalc.FloraMicro)" />
                <br /><br />

                     Gallons:
                <InputNumber id="SingleCalculation." @bind-Value="@SingCalc.Gallons"
                             type="text" style="width:100%;" />
                <ValidationMessage For="@(() => SingCalc.Gallons)" />
                <br /><br />

                Date Entered in Inventory:
                <InputDate id="SingleCalculation." @bind-Value="@SingCalc.DateAddedToInventory"
                           type="date" style="width:100%;" />
                <ValidationMessage For="@(() => SingCalc.DateAddedToInventory)" />
                <br /><br />

                Date Removed From Inventory:
                <InputDate id="SingleCalculation." @bind-Value="@SingCalc.DateRemovedFromInventory"
                           type="date" style="width:100%;" />
                <ValidationMessage For="@(() => SingCalc.DateRemovedFromInventory)" />
                <br /><br />

                <button type="button" @onclick="SubmitButtonPressed">Submit</button>
                <button type="button" @onclick="ClearButtonPressed">Clear</button>
            </EditForm>
        </form>
    </div>
    <div style="color:white">
        <p style="font-weight:bold">  End Value: $@FinCalc.FinalCalc</p>
    </div>
</div>
<div>
    @UIMessage
</div>

<!--End of Main Part of page-->

@code {
        //Initilizer
        SingleCalcualtion SingCalc = new SingleCalcualtion();
        SingleCalcualtion FinCalc = new SingleCalcualtion();
        int i;

        //UI Message
        string UIMessage = "";

        void Initalize()
        {
            foreach (var CalculatedService in CalculatedService.AllCalcualtions)
            {
                if (CalculatedService.Position >= 0)
                {
                    SingCalc = CalculatedService; 
                }
            }
        }

        /*protected override async Task OnInitializedAsync()
        {
        initalize();
        }*/

        void SubmitButtonPressed()
        {
            if (SingCalc.Title != "" && SingCalc.Gallons > 0 && SingCalc.FloraBloom > 0 && SingCalc.FloraGro > 0 && SingCalc.FloraMicro > 0 && SingCalc.DateAddedToInventory > DateTime.MinValue && SingCalc.DateRemovedFromInventory > DateTime.MinValue)
            {

                //TODO this may need to change positions and be resolved in general
                i = SingCalc.Position;
                CalculatedService.AllCalcualtions.RemoveAt(SingCalc.Position);
                SingCalc.Position = -1;
                CalculatedService.AllCalcualtions.Insert(i, SingCalc);
                /*FinCalc.Title = SingCalc.Title;
                FinCalc.Gallons = SingCalc.Gallons;
                FinCalc.FloraBloom = SingCalc.FloraBloom;
                FinCalc.FloraGro = SingCalc.FloraGro;
                FinCalc.FloraMicro = SingCalc.FloraMicro;
                FinCalc.DateAddedToInventory = SingCalc.DateAddedToInventory;
                FinCalc.DateRemovedFromInventory = SingCalc.DateRemovedFromInventory;*/
            }
    }

    void ClearButtonPressed()
    {
        SingCalc.FloraMicro = 0;
        SingCalc.FloraGro = 0;
        SingCalc.FloraBloom = 0;
        SingCalc.Gallons = 0;

        FinCalc.FloraMicro = 0;
        FinCalc.FloraGro = 0;
        FinCalc.FloraBloom = 0;
        FinCalc.Gallons = 0;
    }
}
